// A default Qwerty keymap is provided along with the Tutte-Coxeter 36K (TC36K) shield.
// This file is my personal keymap, a modified version of Hands Down Promethium layout
// with a numbers/navigation layer, and symbols on chords/combos. Assuming ISO with
// British locale (e.g. double-quote versus at sign, pipe, etc)

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include "zmk-helpers/key-labels/36.h"

/ {
  chosen {
    /delete-property/     zephyr,console;
    /delete-property/     zephyr,shell-uart;
    /delete-property/     zephyr,uart-mcumgr;
    /delete-property/     zephyr,bt-mon-uart;
    /delete-property/     zephyr,bt-c2h-uart;
  };
};

// Aliases for my layers
#define DEFAULT 0
#define NUM_NAV 1

/ {
    behaviors {
        // make shift+quote give double-quote like ANSI or Apple UK
        // when host setup with British layout (would be @-sign)
        xquote: override_shift_quote {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp N2>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "HD Promethium";
            bindings = <
                &kp V  &kp P  &kp G    &kp M   &kp X         &kp SLASH &kp DOT   &xquote &kp MINUS &kp EQUAL
                &kp S  &kp N  &kp T    &kp H   &kp K         &kp COMMA &kp A     &kp E   &kp I     &kp C
                &kp B  &kp F  &kp D    &kp L   &kp J         &kp SEMI  &kp U     &kp O   &kp Y     &kp W
                              &kp LGUI &kp R   &kp BACKSPACE &kp LSHFT &kp SPACE &mo NUM_NAV
            >;
        };

        num_nav_layer {
            display-name = "Num + Nav";
            bindings = <
                &mt LALT  KP_DIVIDE   &kp N1 &kp N2 &kp N3 &kp KP_EQUAL    &kp ESC   &kp HOME     &kp UP   &kp END       &mt RALT BACKSPACE
                &mt LCTRL KP_MULTIPLY &kp N4 &kp N5 &kp N6 &kp KP_PLUS     &kp PG_UP &kp LEFT     &kp DOWN &kp RIGHT     &mt RCTRL Q
                &mt LSHFT KP_DOT      &kp N7 &kp N8 &kp N9 &kp KP_MULTIPLY &kp PG_DN &kp LA(LEFT) &kp RET  &kp LA(RIGHT) &mt RSHFT Z
                                       &trans &kp N0 &trans          &trans    &trans       &trans
            >;
        };

        // Empty layers for ZMK Studio:
        extra2 {
            status = "reserved";
        };
        extra3 {
            status = "reserved";
        };
        extra4 {
            status = "reserved";
        };
        extra5 {
            status = "reserved";
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        // Top left (Q) + top right (P) = &studio_unlock
        combo_sys_reset {
            timeout-ms = <100>;
            key-positions = <0 9>;
            bindings = <&studio_unlock>;
        };

        // Inner corners (T, Y, B, N) = &bootloader
        combo_bootloader {
            timeout-ms = <300>;
            key-positions = <LT0 RT0 LB0 RB0>;
            bindings = <&bootloader>;
            layers = <DEFAULT>;
        };

        // 2 or 3-key horizontal combos (big four)
        esc_combo {
            bindings = <&kp ESCAPE>;
            key-positions = <LT1 LT2 LT3>;
        };

        esc2_combo {
            bindings = <&kp ESCAPE>;
            key-positions = <LT1 LT2>;
        };

        esc3_combo {
            bindings = <&kp ESCAPE>;
            key-positions = <LT2 LT3>;
        };

        bksp_combo {
            bindings = <&kp BACKSPACE>;
            key-positions = <RT1 RT2 RT3>;
        };

        bksp2_combo {
            bindings = <&kp BACKSPACE>;
            key-positions = <RT1 RT2>;
        };

        bksp3_combo {
            bindings = <&kp BACKSPACE>;
            key-positions = <RT2 RT3>;
        };


        tab_combo {
            bindings = <&kp TAB>;
            key-positions = <LB1 LB2 LB3>;
        };

        enter_combo {
            bindings = <&kp ENTER>;
            key-positions = <RB1 RB2 RB3>;
        };

        // 2-key vertical combos (symbols)
        backtick {
            bindings = <&kp GRAVE>;
            key-positions = <LT4 LM4>;
            layers = <DEFAULT NUM_NAV>;
        };

        at_sign {
            bindings = <&kp LS(SQT)>;
            key-positions = <LT3 LM3>;
            layers = <DEFAULT NUM_NAV>;
        };

        gbp_sign {
            bindings = <&kp LS(NUMBER_3)>;
            key-positions = <LT2 LM2>;
            layers = <DEFAULT NUM_NAV>;
        };

        dollar_sign {
            bindings = <&kp DOLLAR>;
            key-positions = <LT1 LM1>;
            layers = <DEFAULT NUM_NAV>;
        };

        percent_sign {
            bindings = <&kp PERCENT>;
            key-positions = <LT0 LM0>;
            layers = <DEFAULT NUM_NAV>;
        };

        pipe_sign {
            bindings = <&kp LS(NON_US_BACKSLASH)>;
            key-positions = <LM0 LB0>;
            layers = <DEFAULT NUM_NAV>;
        };

        exclation_mark {
            bindings = <&kp EXCL>;
            key-positions = <RM0 RB0>;
            layers = <DEFAULT NUM_NAV>;
        };

        caret_sign {
            bindings = <&kp CARET>;
            key-positions = <RT0 RM0>;
            layers = <DEFAULT NUM_NAV>;
        };

        ampersand_sign {
            bindings = <&kp AMPS>;
            key-positions = <RT1 RM1>;
            layers = <DEFAULT NUM_NAV>;
        };

        hash_sign {
            bindings = <&kp NON_US_HASH>;
            key-positions = <RT2 RM2>;
            layers = <DEFAULT NUM_NAV>;
        };

        backslash_sign {
            bindings = <&kp NON_US_BACKSLASH>;
            key-positions = <RT3 RM3>;
            layers = <DEFAULT NUM_NAV>;
        };

        tilde_sign {
            bindings = <&kp LS(NON_US_HASH)>;
            key-positions = <RT4 RM4>;
            layers = <DEFAULT NUM_NAV>;
        };

        // 2-key horizontal combos (brackets):
        open_curly {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <LT0 LT1>;
            layers = <DEFAULT NUM_NAV>;
        };

        close_curly {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <RT0 RT1>;
            layers = <DEFAULT NUM_NAV>;
        };

        open_bracket {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <LM0 LM1>;
            layers = <DEFAULT NUM_NAV>;
        };

        close_bracket {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <RM0 RM1>;
            layers = <DEFAULT NUM_NAV>;
        };

        open_square {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <LB0 LB1>;
            layers = <DEFAULT NUM_NAV>;
        };

        close_square {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <RB0 RB1>;
            layers = <DEFAULT NUM_NAV>;
        };

    };
};
